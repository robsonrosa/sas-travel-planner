name: Simple Deploy Travel Planner API

on:
  push:
    branches: 
      - 'main'
    paths:
      - 'api/**'
      - '.github/workflows/api.yaml'

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
    
      - name: Set Version
        id: maven
        run: echo ::set-output name=version::$(mvn -f api/pom.xml -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)

      - name: Maven Setup
        uses: actions/setup-java@v3
        with:
          distribution: 'oracle'
          java-version: '21'
      
      - name: Maven Build
        run: mvn -f api/pom.xml clean install -DskipTests

      - name: Docker Setup
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login ${{ vars.DOCKER_REGISTRY }} -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Docker Build
        run: cd api && docker build -t ${{ vars.DOCKER_REGISTRY }}/travel-planner-api:${{ steps.maven.outputs.version }} .

      - name: Docker Push
        run: docker push ${{ vars.DOCKER_REGISTRY }}/travel-planner-api:${{ steps.maven.outputs.version }}

      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Azure Context
        uses: Azure/aks-set-context@v2
        with:
          resource-group: ${{ secrets.AZURE_RESOURCE_GROUP }}
          cluster-name: ${{ secrets.AZURE_CLUSTER_NAME }}

      - name: Helm Install
        uses: Azure/setup-helm@v1
        with:
          version: v3.14.3


      - name: Deploy API
        run: >-
          helm upgrade --install travel-planner-api ./infra/helm/charts/api \
            --namespace planner \
            --create-namespace \
            --set image.registry=${{ vars.DOCKER_REGISTRY }} \
            --set image.repository=travel-planner-api \
            --set image.tag=${{ steps.maven.outputs.version }} \
            --set name=travel-planner-api \
            --set configmap.data.COSMOS_URI=${{ vars.DATABASE_URI }} \
            --set configmap.data.COSMOS_DATABASE_NAME=${{ vars.DATABASE_NAME }} \
            --set secret.data.COSMOS_PRIMARY_KEY=${{ vars.DATABASE_SECRET }}
