name: Simple Deploy Travel Planner API

on:
  push:
    branches: 
      - 'main'
    paths:
      - 'api/**'
      - 'infra/helm/charts/api/**'
      - '.github/actions/azure/**'
      - '.github/actions/docker/**'
      - '.github/workflows/api.yaml'

env:
  API_ENTRYPOINT_ID: 'travel-service'
  API_ENTRYPOINT_NAME: 'travel-planner-api'

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Set Version
        id: maven
        run: echo "tag=$(mvn -f api/pom.xml -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT

      - name: Maven Setup
        uses: actions/setup-java@v3
        with:
          distribution: 'oracle'
          java-version: '21'
          cache: maven
      
      - name: Maven Build
        run: mvn -f api/pom.xml --no-transfer-progress clean install -DskipTests

      - uses: actions/upload-artifact@v4.3.1
        with:
          name: build
          path: api/${{ env.API_ENTRYPOINT_ID }}/target/*.jar

    outputs:
      tag: ${{ steps.maven.outputs.tag }}

  push-image:
    needs: [ build ]
    runs-on: ubuntu-22.04
    steps:

      - name: Checkout
        uses: actions/checkout@v3
      
      - uses: actions/download-artifact@v4.1.4
        with:
          name: build
          path: api/${{ env.API_ENTRYPOINT_ID }}/target

      - run: ls api/${{ env.API_ENTRYPOINT_ID }}/target

      - name: Docker Build and Push
        uses: ./.github/actions/docker
        with:
          registry: ${{ vars.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          container: ${{ env.API_ENTRYPOINT_NAME }}
          tag: ${{ needs.build.outputs.tag }}
          path: 'api'

  deploy:
    needs: [ build, push-image ]
    runs-on: ubuntu-22.04
    steps:

      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Azure Setup
        id: azure
        uses: ./.github/actions/azure
        with:
          credentials: ${{ secrets.AZURE_CREDENTIALS }}
          resource-group: ${{ secrets.AZURE_RESOURCE_GROUP }}
          cluster-name: ${{ secrets.AZURE_CLUSTER_NAME }}
          dns-zone: ${{ secrets.AZURE_DNS_ZONE }}
          a-record: 'api'

      - name: Deploy API
        run: >-
          helm upgrade --install travel-planner-api ./infra/helm/charts/api \
            --namespace planner \
            --create-namespace \
            --set image.registry=${{ vars.DOCKER_REGISTRY }} \
            --set image.repository=travel-planner-api \
            --set image.tag=${{ needs.build.outputs.tag }} \
            --set name=travel-planner-api \
            --set configmap.data.COSMOS_URI=${{ vars.DATABASE_URI }} \
            --set configmap.data.COSMOS_DATABASE_NAME=${{ vars.DATABASE_NAME }} \
            --set secret.data.COSMOS_PRIMARY_KEY=${{ vars.DATABASE_SECRET }} \
            --set publicIpName=api-ip \
            --set resourceGroup=${{ secrets.AZURE_RESOURCE_GROUP }}
