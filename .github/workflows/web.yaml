name: Simple Deploy Travel Planner Web Application

on:
  push:
    branches: 
      - 'main'
    paths:
      - 'web/**'
      - 'infra/helm/charts/web/**'
      - '.github/actions/azure/**'
      - '.github/actions/docker/**'
      - '.github/workflows/web.yaml'

env:
  REACT_APP_SERVER_URL: api.sastravelplanner.online

jobs:
  build:
    runs-on: ubuntu-22.04

    defaults:
      run:
        working-directory: ./web

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get package info
        id: package
        uses: codex-team/action-nodejs-package-info@v1.1
        with:
          path: ./web
        
      - name: NPM Setup
        uses: actions/setup-node@v1
        with:
          node-version: '16.20.*'
      
      - name: NPM Build
        run: |
          npm ci
          npm run build

      - uses: actions/upload-artifact@v4.3.1
        with:
          name: build
          path: web/build

    outputs:
      package-name: ${{ steps.package.outputs.name }}
      package-version: ${{ steps.package.outputs.version }}

  push-image:
    needs: [ build ]
    runs-on: ubuntu-22.04
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/download-artifact@v4.1.4
        with:
          name: build
          path: web/build

      - name: Docker Build and Push
        uses: ./.github/actions/docker
        with:
          registry: ${{ vars.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          container: ${{ needs.build.outputs.package-name }}
          tag: ${{ needs.build.outputs.package-version }}
          path: 'web'

  deploy:
    needs: [ build, push-image ]
    runs-on: ubuntu-22.04
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Azure Setup
        id: azure
        uses: ./.github/actions/azure
        with:
          credentials: ${{ secrets.AZURE_CREDENTIALS }}
          resource-group: ${{ secrets.AZURE_RESOURCE_GROUP }}
          cluster-name: ${{ secrets.AZURE_CLUSTER_NAME }}
          dns-zone: ${{ secrets.AZURE_DNS_ZONE }}
          a-record: '@'

      - name: Deploy Web Application
        run: >-
          helm upgrade --install ${{ needs.build.outputs.package-name }} infra/helm/charts/web \
            --namespace planner \
            --create-namespace \
            --set image.registry=${{ vars.DOCKER_REGISTRY }} \
            --set image.repository=${{ needs.build.outputs.package-name }} \
            --set image.tag=${{ needs.build.outputs.package-version }} \
            --set name=${{ needs.build.outputs.package-name }} \
            --set publicIpName=web-ip \
            --set resourceGroup=${{ secrets.AZURE_RESOURCE_GROUP }}
